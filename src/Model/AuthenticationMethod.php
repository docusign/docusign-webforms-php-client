<?php
/**
 * AuthenticationMethod
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\WebForms
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The Docusign PHP Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web Forms API version 1.1
 *
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\WebForms\Model;
use DocuSign\WebForms\ObjectSerializer;

/**
 * AuthenticationMethod Class Doc Comment
 *
 * @category    Class
 * @description A value that most closely matches the technique your application used to authenticate the recipient / signer.
 * @package     DocuSign\WebForms
 * @author      Swagger Codegen team <apihelp@docusign.com>
 * @license     The Docusign PHP Client SDK is licensed under the MIT License.
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AuthenticationMethod
{
    /**
     * Possible values of this enum
     */
    const BIOMETRIC = 'Biometric';
    const EMAIL = 'Email';
    const HTTP_BASIC_AUTH = 'HTTPBasicAuth';
    const KERBEROS = 'Kerberos';
    const KNOWLEDGE_BASED_AUTH = 'KnowledgeBasedAuth';
    const NONE = 'None';
    const PAPER_DOCUMENTS = 'PaperDocuments';
    const PASSWORD = 'Password';
    const RSA_SECURE_ID = 'RSASecureID';
    const SINGLE_SIGN_ON_CA_SITEMINDER = 'SingleSignOn_CASiteminder';
    const SINGLE_SIGN_ON_INFO_CARD = 'SingleSignOn_InfoCard';
    const SINGLE_SIGN_ON_MICROSOFT_ACTIVE_DIRECTORY = 'SingleSignOn_MicrosoftActiveDirectory';
    const SINGLE_SIGN_ON_OTHER = 'SingleSignOn_Other';
    const SINGLE_SIGN_ON_PASSPORT = 'SingleSignOn_Passport';
    const SINGLE_SIGN_ON_SAML = 'SingleSignOn_SAML';
    const SMARTCARD = 'Smartcard';
    const SSL_MUTUAL_AUTH = 'SSLMutualAuth';
    const X509_CERTIFICATE = 'X509Certificate';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BIOMETRIC,
            self::EMAIL,
            self::HTTP_BASIC_AUTH,
            self::KERBEROS,
            self::KNOWLEDGE_BASED_AUTH,
            self::NONE,
            self::PAPER_DOCUMENTS,
            self::PASSWORD,
            self::RSA_SECURE_ID,
            self::SINGLE_SIGN_ON_CA_SITEMINDER,
            self::SINGLE_SIGN_ON_INFO_CARD,
            self::SINGLE_SIGN_ON_MICROSOFT_ACTIVE_DIRECTORY,
            self::SINGLE_SIGN_ON_OTHER,
            self::SINGLE_SIGN_ON_PASSPORT,
            self::SINGLE_SIGN_ON_SAML,
            self::SMARTCARD,
            self::SSL_MUTUAL_AUTH,
            self::X509_CERTIFICATE,
        ];
    }
}

