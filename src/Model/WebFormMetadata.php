<?php
/**
 * WebFormMetadata
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  DocuSign\WebForms
 * @author   Swagger Codegen team <apihelp@docusign.com>
 * @license  The Docusign PHP Client SDK is licensed under the MIT License.
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web Forms API version 1.1
 *
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.21
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DocuSign\WebForms\Model;

use \ArrayAccess;
use DocuSign\WebForms\ObjectSerializer;

/**
 * WebFormMetadata Class Doc Comment
 *
 * @category    Class
 * @description Form metadata
 * @package     DocuSign\WebForms
 * @author      Swagger Codegen team <apihelp@docusign.com>
 * @license     The Docusign PHP Client SDK is licensed under the MIT License.
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class WebFormMetadata implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WebFormMetadata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'source' => '\DocuSign\WebForms\Model\WebFormSource',
        'type' => '\DocuSign\WebForms\Model\WebFormType',
        'source_form_id' => '?string',
        'owner' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'sender' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'last_modified_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'form_content_modified_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'form_properties_modified_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'last_published_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'last_enabled_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'last_disabled_by' => '\DocuSign\WebForms\Model\WebFormUserInfo',
        'archived_date_time' => '?string',
        'created_date_time' => '?string',
        'last_modified_date_time' => '?string',
        'form_content_modified_date_time' => '?string',
        'form_properties_modified_date_time' => '?string',
        'last_published_date_time' => '?string',
        'last_enabled_date_time' => '?string',
        'last_disabled_date_time' => '?string',
        'last_sender_consent_date_time' => '?string',
        'published_slug' => '?string',
        'published_component_names' => 'map[string,\DocuSign\WebForms\Model\WebFormComponentType]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'source' => null,
        'type' => null,
        'source_form_id' => null,
        'owner' => null,
        'sender' => null,
        'last_modified_by' => null,
        'form_content_modified_by' => null,
        'form_properties_modified_by' => null,
        'last_published_by' => null,
        'last_enabled_by' => null,
        'last_disabled_by' => null,
        'archived_date_time' => 'date-time',
        'created_date_time' => 'date-time',
        'last_modified_date_time' => 'date-time',
        'form_content_modified_date_time' => 'date-time',
        'form_properties_modified_date_time' => 'date-time',
        'last_published_date_time' => 'date-time',
        'last_enabled_date_time' => 'date-time',
        'last_disabled_date_time' => 'date-time',
        'last_sender_consent_date_time' => 'date-time',
        'published_slug' => null,
        'published_component_names' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'source' => 'source',
        'type' => 'type',
        'source_form_id' => 'sourceFormId',
        'owner' => 'owner',
        'sender' => 'sender',
        'last_modified_by' => 'lastModifiedBy',
        'form_content_modified_by' => 'formContentModifiedBy',
        'form_properties_modified_by' => 'formPropertiesModifiedBy',
        'last_published_by' => 'lastPublishedBy',
        'last_enabled_by' => 'lastEnabledBy',
        'last_disabled_by' => 'lastDisabledBy',
        'archived_date_time' => 'archivedDateTime',
        'created_date_time' => 'createdDateTime',
        'last_modified_date_time' => 'lastModifiedDateTime',
        'form_content_modified_date_time' => 'formContentModifiedDateTime',
        'form_properties_modified_date_time' => 'formPropertiesModifiedDateTime',
        'last_published_date_time' => 'lastPublishedDateTime',
        'last_enabled_date_time' => 'lastEnabledDateTime',
        'last_disabled_date_time' => 'lastDisabledDateTime',
        'last_sender_consent_date_time' => 'lastSenderConsentDateTime',
        'published_slug' => 'publishedSlug',
        'published_component_names' => 'publishedComponentNames'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'source' => 'setSource',
        'type' => 'setType',
        'source_form_id' => 'setSourceFormId',
        'owner' => 'setOwner',
        'sender' => 'setSender',
        'last_modified_by' => 'setLastModifiedBy',
        'form_content_modified_by' => 'setFormContentModifiedBy',
        'form_properties_modified_by' => 'setFormPropertiesModifiedBy',
        'last_published_by' => 'setLastPublishedBy',
        'last_enabled_by' => 'setLastEnabledBy',
        'last_disabled_by' => 'setLastDisabledBy',
        'archived_date_time' => 'setArchivedDateTime',
        'created_date_time' => 'setCreatedDateTime',
        'last_modified_date_time' => 'setLastModifiedDateTime',
        'form_content_modified_date_time' => 'setFormContentModifiedDateTime',
        'form_properties_modified_date_time' => 'setFormPropertiesModifiedDateTime',
        'last_published_date_time' => 'setLastPublishedDateTime',
        'last_enabled_date_time' => 'setLastEnabledDateTime',
        'last_disabled_date_time' => 'setLastDisabledDateTime',
        'last_sender_consent_date_time' => 'setLastSenderConsentDateTime',
        'published_slug' => 'setPublishedSlug',
        'published_component_names' => 'setPublishedComponentNames'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'source' => 'getSource',
        'type' => 'getType',
        'source_form_id' => 'getSourceFormId',
        'owner' => 'getOwner',
        'sender' => 'getSender',
        'last_modified_by' => 'getLastModifiedBy',
        'form_content_modified_by' => 'getFormContentModifiedBy',
        'form_properties_modified_by' => 'getFormPropertiesModifiedBy',
        'last_published_by' => 'getLastPublishedBy',
        'last_enabled_by' => 'getLastEnabledBy',
        'last_disabled_by' => 'getLastDisabledBy',
        'archived_date_time' => 'getArchivedDateTime',
        'created_date_time' => 'getCreatedDateTime',
        'last_modified_date_time' => 'getLastModifiedDateTime',
        'form_content_modified_date_time' => 'getFormContentModifiedDateTime',
        'form_properties_modified_date_time' => 'getFormPropertiesModifiedDateTime',
        'last_published_date_time' => 'getLastPublishedDateTime',
        'last_enabled_date_time' => 'getLastEnabledDateTime',
        'last_disabled_date_time' => 'getLastDisabledDateTime',
        'last_sender_consent_date_time' => 'getLastSenderConsentDateTime',
        'published_slug' => 'getPublishedSlug',
        'published_component_names' => 'getPublishedComponentNames'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['source_form_id'] = isset($data['source_form_id']) ? $data['source_form_id'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['sender'] = isset($data['sender']) ? $data['sender'] : null;
        $this->container['last_modified_by'] = isset($data['last_modified_by']) ? $data['last_modified_by'] : null;
        $this->container['form_content_modified_by'] = isset($data['form_content_modified_by']) ? $data['form_content_modified_by'] : null;
        $this->container['form_properties_modified_by'] = isset($data['form_properties_modified_by']) ? $data['form_properties_modified_by'] : null;
        $this->container['last_published_by'] = isset($data['last_published_by']) ? $data['last_published_by'] : null;
        $this->container['last_enabled_by'] = isset($data['last_enabled_by']) ? $data['last_enabled_by'] : null;
        $this->container['last_disabled_by'] = isset($data['last_disabled_by']) ? $data['last_disabled_by'] : null;
        $this->container['archived_date_time'] = isset($data['archived_date_time']) ? $data['archived_date_time'] : null;
        $this->container['created_date_time'] = isset($data['created_date_time']) ? $data['created_date_time'] : null;
        $this->container['last_modified_date_time'] = isset($data['last_modified_date_time']) ? $data['last_modified_date_time'] : null;
        $this->container['form_content_modified_date_time'] = isset($data['form_content_modified_date_time']) ? $data['form_content_modified_date_time'] : null;
        $this->container['form_properties_modified_date_time'] = isset($data['form_properties_modified_date_time']) ? $data['form_properties_modified_date_time'] : null;
        $this->container['last_published_date_time'] = isset($data['last_published_date_time']) ? $data['last_published_date_time'] : null;
        $this->container['last_enabled_date_time'] = isset($data['last_enabled_date_time']) ? $data['last_enabled_date_time'] : null;
        $this->container['last_disabled_date_time'] = isset($data['last_disabled_date_time']) ? $data['last_disabled_date_time'] : null;
        $this->container['last_sender_consent_date_time'] = isset($data['last_sender_consent_date_time']) ? $data['last_sender_consent_date_time'] : null;
        $this->container['published_slug'] = isset($data['published_slug']) ? $data['published_slug'] : null;
        $this->container['published_component_names'] = isset($data['published_component_names']) ? $data['published_component_names'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets source
     *
     * @return \DocuSign\WebForms\Model\WebFormSource
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param \DocuSign\WebForms\Model\WebFormSource $source The source from which the webform is created. Accepted values are [templates, blank, form]
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \DocuSign\WebForms\Model\WebFormType
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \DocuSign\WebForms\Model\WebFormType $type Represents webform type. Possible values are [standalone, hasEsignTemplate]
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets source_form_id
     *
     * @return ?string
     */
    public function getSourceFormId()
    {
        return $this->container['source_form_id'];
    }

    /**
     * Sets source_form_id
     *
     * @param ?string $source_form_id The source form id from which the webform is created.
     *
     * @return $this
     */
    public function setSourceFormId($source_form_id)
    {
        $this->container['source_form_id'] = $source_form_id;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $owner The user that created the form or has been transferred ownership
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets sender
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getSender()
    {
        return $this->container['sender'];
    }

    /**
     * Sets sender
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $sender The user that has added their consent to the form for sending actions
     *
     * @return $this
     */
    public function setSender($sender)
    {
        $this->container['sender'] = $sender;

        return $this;
    }

    /**
     * Gets last_modified_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getLastModifiedBy()
    {
        return $this->container['last_modified_by'];
    }

    /**
     * Sets last_modified_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $last_modified_by Track the user that last modified anything related to the form
     *
     * @return $this
     */
    public function setLastModifiedBy($last_modified_by)
    {
        $this->container['last_modified_by'] = $last_modified_by;

        return $this;
    }

    /**
     * Gets form_content_modified_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getFormContentModifiedBy()
    {
        return $this->container['form_content_modified_by'];
    }

    /**
     * Sets form_content_modified_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $form_content_modified_by Track the user that last modified the form content
     *
     * @return $this
     */
    public function setFormContentModifiedBy($form_content_modified_by)
    {
        $this->container['form_content_modified_by'] = $form_content_modified_by;

        return $this;
    }

    /**
     * Gets form_properties_modified_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getFormPropertiesModifiedBy()
    {
        return $this->container['form_properties_modified_by'];
    }

    /**
     * Sets form_properties_modified_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $form_properties_modified_by Track the user that last modified the form properties
     *
     * @return $this
     */
    public function setFormPropertiesModifiedBy($form_properties_modified_by)
    {
        $this->container['form_properties_modified_by'] = $form_properties_modified_by;

        return $this;
    }

    /**
     * Gets last_published_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getLastPublishedBy()
    {
        return $this->container['last_published_by'];
    }

    /**
     * Sets last_published_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $last_published_by Track the user that last published a draft version to active
     *
     * @return $this
     */
    public function setLastPublishedBy($last_published_by)
    {
        $this->container['last_published_by'] = $last_published_by;

        return $this;
    }

    /**
     * Gets last_enabled_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getLastEnabledBy()
    {
        return $this->container['last_enabled_by'];
    }

    /**
     * Sets last_enabled_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $last_enabled_by Track the user that last unpublished an active version
     *
     * @return $this
     */
    public function setLastEnabledBy($last_enabled_by)
    {
        $this->container['last_enabled_by'] = $last_enabled_by;

        return $this;
    }

    /**
     * Gets last_disabled_by
     *
     * @return \DocuSign\WebForms\Model\WebFormUserInfo
     */
    public function getLastDisabledBy()
    {
        return $this->container['last_disabled_by'];
    }

    /**
     * Sets last_disabled_by
     *
     * @param \DocuSign\WebForms\Model\WebFormUserInfo $last_disabled_by Track the user that last unpublished an active version
     *
     * @return $this
     */
    public function setLastDisabledBy($last_disabled_by)
    {
        $this->container['last_disabled_by'] = $last_disabled_by;

        return $this;
    }

    /**
     * Gets archived_date_time
     *
     * @return ?string
     */
    public function getArchivedDateTime()
    {
        return $this->container['archived_date_time'];
    }

    /**
     * Sets archived_date_time
     *
     * @param ?string $archived_date_time The last time the web form was archived
     *
     * @return $this
     */
    public function setArchivedDateTime($archived_date_time)
    {
        $this->container['archived_date_time'] = $archived_date_time;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return ?string
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param ?string $created_date_time Track the time the web form was created
     *
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets last_modified_date_time
     *
     * @return ?string
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['last_modified_date_time'];
    }

    /**
     * Sets last_modified_date_time
     *
     * @param ?string $last_modified_date_time The last time anything was modified on the form
     *
     * @return $this
     */
    public function setLastModifiedDateTime($last_modified_date_time)
    {
        $this->container['last_modified_date_time'] = $last_modified_date_time;

        return $this;
    }

    /**
     * Gets form_content_modified_date_time
     *
     * @return ?string
     */
    public function getFormContentModifiedDateTime()
    {
        return $this->container['form_content_modified_date_time'];
    }

    /**
     * Sets form_content_modified_date_time
     *
     * @param ?string $form_content_modified_date_time Track the last time web form content changed.
     *
     * @return $this
     */
    public function setFormContentModifiedDateTime($form_content_modified_date_time)
    {
        $this->container['form_content_modified_date_time'] = $form_content_modified_date_time;

        return $this;
    }

    /**
     * Gets form_properties_modified_date_time
     *
     * @return ?string
     */
    public function getFormPropertiesModifiedDateTime()
    {
        return $this->container['form_properties_modified_date_time'];
    }

    /**
     * Sets form_properties_modified_date_time
     *
     * @param ?string $form_properties_modified_date_time Track the last time the form properties changed.
     *
     * @return $this
     */
    public function setFormPropertiesModifiedDateTime($form_properties_modified_date_time)
    {
        $this->container['form_properties_modified_date_time'] = $form_properties_modified_date_time;

        return $this;
    }

    /**
     * Gets last_published_date_time
     *
     * @return ?string
     */
    public function getLastPublishedDateTime()
    {
        return $this->container['last_published_date_time'];
    }

    /**
     * Sets last_published_date_time
     *
     * @param ?string $last_published_date_time Track the last time a draft version was published to active
     *
     * @return $this
     */
    public function setLastPublishedDateTime($last_published_date_time)
    {
        $this->container['last_published_date_time'] = $last_published_date_time;

        return $this;
    }

    /**
     * Gets last_enabled_date_time
     *
     * @return ?string
     */
    public function getLastEnabledDateTime()
    {
        return $this->container['last_enabled_date_time'];
    }

    /**
     * Sets last_enabled_date_time
     *
     * @param ?string $last_enabled_date_time Track the last time the form was enabled
     *
     * @return $this
     */
    public function setLastEnabledDateTime($last_enabled_date_time)
    {
        $this->container['last_enabled_date_time'] = $last_enabled_date_time;

        return $this;
    }

    /**
     * Gets last_disabled_date_time
     *
     * @return ?string
     */
    public function getLastDisabledDateTime()
    {
        return $this->container['last_disabled_date_time'];
    }

    /**
     * Sets last_disabled_date_time
     *
     * @param ?string $last_disabled_date_time Track the last time the form was disabled
     *
     * @return $this
     */
    public function setLastDisabledDateTime($last_disabled_date_time)
    {
        $this->container['last_disabled_date_time'] = $last_disabled_date_time;

        return $this;
    }

    /**
     * Gets last_sender_consent_date_time
     *
     * @return ?string
     */
    public function getLastSenderConsentDateTime()
    {
        return $this->container['last_sender_consent_date_time'];
    }

    /**
     * Sets last_sender_consent_date_time
     *
     * @param ?string $last_sender_consent_date_time Track the last time a user added their consent for the form.
     *
     * @return $this
     */
    public function setLastSenderConsentDateTime($last_sender_consent_date_time)
    {
        $this->container['last_sender_consent_date_time'] = $last_sender_consent_date_time;

        return $this;
    }

    /**
     * Gets published_slug
     *
     * @return ?string
     */
    public function getPublishedSlug()
    {
        return $this->container['published_slug'];
    }

    /**
     * Sets published_slug
     *
     * @param ?string $published_slug The public friendly slug that is used to access the form from the player
     *
     * @return $this
     */
    public function setPublishedSlug($published_slug)
    {
        $this->container['published_slug'] = $published_slug;

        return $this;
    }

    /**
     * Gets published_component_names
     *
     * @return map[string,\DocuSign\WebForms\Model\WebFormComponentType]
     */
    public function getPublishedComponentNames()
    {
        return $this->container['published_component_names'];
    }

    /**
     * Sets published_component_names
     *
     * @param map[string,\DocuSign\WebForms\Model\WebFormComponentType] $published_component_names A dictionary containing the mapping of component names to their respective component types for all the published components.
     *
     * @return $this
     */
    public function setPublishedComponentNames($published_component_names)
    {
        $this->container['published_component_names'] = $published_component_names;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

